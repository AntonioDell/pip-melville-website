name: cd-pipeline
on:
  push:
    # Pattern matched against refs/tags
    tags:        
      - '**'
jobs:
  export-game:
    runs-on: ubuntu-latest
    name: Export Game
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: get tag from version
        id: tag_version
        run: |
          echo ::set-output name=TAG_VERSION::${GITHUB_REF#refs/tags/v}
      - name: export game
        id: export
        # Use latest version (see releases for all versions)
        uses: firebelley/godot-export@v4.1.0
        with:
          # Defining all the required inputs
          godot_executable_download_url: https://github.com/godotengine/godot/releases/download/3.5-stable/Godot_v3.5-stable_linux_headless.64.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/3.5-stable/Godot_v3.5-stable_export_templates.tpz
          relative_project_path: ./
          archive_output: true
      - name: create release
        uses: softprops/action-gh-release@v0.1.14
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
          tag_name: ${{ steps.tag_version.outputs.TAG_VERSION }}
          files: ${{ steps.export.outputs.archive_directory }}/*
      - name: unzip archive
        run: |
          unzip ${{ steps.export.outputs.archive_directory }} -d web
      - name: set up S3cmd cli tool
        uses: s3-actions/s3cmd@v1.2.0
        with:
          provider: linode
          region: 'eu-central-1'
          access_key: ${{ secrets.PMW_S3_ACCESS_KEY }}
          secret_key: ${{ secrets.PMW_S3_SECRET_KEY }}
      - name: replace version
        run: |
          s3cmd del -r ${{ secrets.PMW_S3_WEB_URL }}
          s3cmd sync --recursive --acl-public web ${{ secrets.PMW_S3_WEB_URL }}
